// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ItemDeListed extends ethereum.Event {
  get params(): ItemDeListed__Params {
    return new ItemDeListed__Params(this);
  }
}

export class ItemDeListed__Params {
  _event: ItemDeListed;

  constructor(event: ItemDeListed) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nftAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class ItemListedForRent extends ethereum.Event {
  get params(): ItemListedForRent__Params {
    return new ItemListedForRent__Params(this);
  }
}

export class ItemListedForRent__Params {
  _event: ItemListedForRent;

  constructor(event: ItemListedForRent) {
    this._event = event;
  }

  get seller(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nftAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get pricePerDay(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ItemRented extends ethereum.Event {
  get params(): ItemRented__Params {
    return new ItemRented__Params(this);
  }
}

export class ItemRented__Params {
  _event: ItemRented;

  constructor(event: ItemRented) {
    this._event = event;
  }

  get renter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nftAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get duration(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class ItemReturned extends ethereum.Event {
  get params(): ItemReturned__Params {
    return new ItemReturned__Params(this);
  }
}

export class ItemReturned__Params {
  _event: ItemReturned;

  constructor(event: ItemReturned) {
    this._event = event;
  }

  get renter(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get nftAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get duration(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class Marketplace__allNftContractListingsResult {
  value0: BigInt;
  value1: Address;
  value2: Address;
  value3: Address;
  value4: BigInt;
  value5: BigInt;
  value6: BigInt;
  value7: boolean;

  constructor(
    value0: BigInt,
    value1: Address,
    value2: Address,
    value3: Address,
    value4: BigInt,
    value5: BigInt,
    value6: BigInt,
    value7: boolean
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
    this.value7 = value7;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromAddress(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromUnsignedBigInt(this.value5));
    map.set("value6", ethereum.Value.fromUnsignedBigInt(this.value6));
    map.set("value7", ethereum.Value.fromBoolean(this.value7));
    return map;
  }

  getPrice(): BigInt {
    return this.value0;
  }

  getSeller(): Address {
    return this.value1;
  }

  getRenter(): Address {
    return this.value2;
  }

  getNftContractAddress(): Address {
    return this.value3;
  }

  getTokenId(): BigInt {
    return this.value4;
  }

  getAllowedDuration(): BigInt {
    return this.value5;
  }

  getRentedDuration(): BigInt {
    return this.value6;
  }

  getIsRented(): boolean {
    return this.value7;
  }
}

export class Marketplace extends ethereum.SmartContract {
  static bind(address: Address): Marketplace {
    return new Marketplace("Marketplace", address);
  }

  allNftContractListings(
    param0: Address,
    param1: BigInt
  ): Marketplace__allNftContractListingsResult {
    let result = super.call(
      "allNftContractListings",
      "allNftContractListings(address,uint256):(uint256,address,address,address,uint256,uint256,uint256,bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return new Marketplace__allNftContractListingsResult(
      result[0].toBigInt(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toAddress(),
      result[4].toBigInt(),
      result[5].toBigInt(),
      result[6].toBigInt(),
      result[7].toBoolean()
    );
  }

  try_allNftContractListings(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<Marketplace__allNftContractListingsResult> {
    let result = super.tryCall(
      "allNftContractListings",
      "allNftContractListings(address,uint256):(uint256,address,address,address,uint256,uint256,uint256,bool)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Marketplace__allNftContractListingsResult(
        value[0].toBigInt(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toAddress(),
        value[4].toBigInt(),
        value[5].toBigInt(),
        value[6].toBigInt(),
        value[7].toBoolean()
      )
    );
  }
}

export class DelistItemForRentCall extends ethereum.Call {
  get inputs(): DelistItemForRentCall__Inputs {
    return new DelistItemForRentCall__Inputs(this);
  }

  get outputs(): DelistItemForRentCall__Outputs {
    return new DelistItemForRentCall__Outputs(this);
  }
}

export class DelistItemForRentCall__Inputs {
  _call: DelistItemForRentCall;

  constructor(call: DelistItemForRentCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get nftAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class DelistItemForRentCall__Outputs {
  _call: DelistItemForRentCall;

  constructor(call: DelistItemForRentCall) {
    this._call = call;
  }
}

export class ListItemForRentCall extends ethereum.Call {
  get inputs(): ListItemForRentCall__Inputs {
    return new ListItemForRentCall__Inputs(this);
  }

  get outputs(): ListItemForRentCall__Outputs {
    return new ListItemForRentCall__Outputs(this);
  }
}

export class ListItemForRentCall__Inputs {
  _call: ListItemForRentCall;

  constructor(call: ListItemForRentCall) {
    this._call = call;
  }

  get tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get price(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get nftAddress(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get allowedRentDuration(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class ListItemForRentCall__Outputs {
  _call: ListItemForRentCall;

  constructor(call: ListItemForRentCall) {
    this._call = call;
  }
}

export class RentItemCall extends ethereum.Call {
  get inputs(): RentItemCall__Inputs {
    return new RentItemCall__Inputs(this);
  }

  get outputs(): RentItemCall__Outputs {
    return new RentItemCall__Outputs(this);
  }
}

export class RentItemCall__Inputs {
  _call: RentItemCall;

  constructor(call: RentItemCall) {
    this._call = call;
  }

  get duration(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get nftContractAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class RentItemCall__Outputs {
  _call: RentItemCall;

  constructor(call: RentItemCall) {
    this._call = call;
  }
}

export class ReturnNftFromRentCall extends ethereum.Call {
  get inputs(): ReturnNftFromRentCall__Inputs {
    return new ReturnNftFromRentCall__Inputs(this);
  }

  get outputs(): ReturnNftFromRentCall__Outputs {
    return new ReturnNftFromRentCall__Outputs(this);
  }
}

export class ReturnNftFromRentCall__Inputs {
  _call: ReturnNftFromRentCall;

  constructor(call: ReturnNftFromRentCall) {
    this._call = call;
  }

  get nftContractAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ReturnNftFromRentCall__Outputs {
  _call: ReturnNftFromRentCall;

  constructor(call: ReturnNftFromRentCall) {
    this._call = call;
  }
}
